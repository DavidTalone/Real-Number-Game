#
msgid ""
msgstr ""
"Project-Id-Version: 0.1.0\n"
"POT-Creation-Date: 2020-05-17 12:59:39.454232\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"

#: game_config
msgid "Real number game"
msgstr ""

#: intro
msgid ""
"# The Real Number Game, version 1.0beta\n"
"\n"
"## By Kevin Buzzard and Dan Stanescu currently\n"
"\n"
"# What is this game?\n"
"\n"
"Welcome to the real number game -- a game to help undergraduates learn "
"analysis through Lean,\n"
"a formal proof verification system. Starting from the real numbers with its "
"usual structure,\n"
"we develop the theory of bounds, least upper bounds and greatest lower "
"bounds (sups and infs),\n"
"infinite sequences and infinite series. We develop the theory through "
"problem-solving,\n"
"getting students to formalise proofs in the theory.\n"
"\n"
"This game is a sequel to\n"
"<a href=\"http://wwwf.imperial.ac.uk/~buzzard/xena/natural_number_game/\" "
"target=\"blank\">the natural number game</a>.\n"
"The levels in the Real Number Game need to be solved using tactics. To learn "
"how to use these tactics, I would\n"
"recommend that you first play the Natural Number Game up to at least "
"\"Advanced Proposition world\". I will\n"
"not go through a careful explanation of the tactics taught by the natural "
"number game here.\n"
"\n"
"Blue nodes on the graph are ones that you are ready to enter. Grey nodes you "
"should stay away\n"
"from -- try blue ones higher up the chain first. Green nodes are completed.\n"
"\n"
"# Thanks\n"
"\n"
"Many thanks to Mohammad Pedramfar, without whom this game would not exist.\n"
"\n"
"Several people contributed ideas and sometimes full proofs, most of which "
"have found \n"
"their place in the game in one way or another.\n"
"This aims at being a complete list eventually: Kenny Lau, Patrick Massot, "
"Christopher Sumnicht.\n"
"\n"
"# Questions?\n"
"\n"
"You can ask questions on the <a href=\"https://leanprover.zulipchat.com/\" "
"target=\"blank\">Lean Zulip chat</a>,\n"
"where I am often to be found. \n"
"\n"
"The Real Number Game is brought to you by the Xena project, a project based "
"at Imperial College London\n"
"whose aim is to get mathematics undergraduates using computer theorem "
"provers.\n"
"Lean is a computer theorem prover being developed at Microsoft Research.\n"
"\n"
"Prove a theorem. Write a function. <a href=\"https://twitter.com/XenaProject"
"\" target=\"blank\">@XenaProject</a>.\n"
msgstr ""

#: world_config
msgid "Sets"
msgstr ""

#: Sets level 1 Sup and Inf
msgid "import data.real.basic -- imports the real numbers ℝ"
msgstr ""

#: Sets level 1 2
msgid "-- World name : Sets"
msgstr ""

#: Sets level 1
msgid ""
"# Chapter 1 : Sets\n"
"\n"
"## Level 1 : Introduction to sets.\n"
"\n"
"This chapter assumes you are familiar with the following tactics: `intro`, "
"`apply`, `exact`, `cases`, `split`, `left` and `right`.<br>\n"
"If you are not, try playing Function World and Proposition World of the "
"Natural Number Game.\n"
" \n"
"In this level we will learn about the `change` tactic, and the idea of "
"definitional equality.\n"
"\n"
"For our initial examples, we'll use sets $A$ and $B$  with members of a "
"generic type $X$. Lean defines $A \\subseteq B$ to mean \n"
"$$\\forall a, a \\in A \\implies a \\in B.$$ \n"
"Let's learn how to prove that $A \\subseteq A$, indicated as our goal in the "
"lemma below by `⊢ A ⊆ A`. \n"
"\n"
"By *definition* our goal is equivalent to `∀ a : X, a ∈ A → a ∈ A` (that is, "
"due to the actual definition of `⊆` in Lean). <br>\n"
"Whenever two expressions are *definitionally equal* in this way, we can use "
"the `change` tactic to replace one by the other in a goal. <br> \n"
"For example, if `P` and `Q` are  equal by definition then we can use\n"
"\n"
"`change Q,`\n"
"\n"
"to change a goal `P` to a goal `Q` (remembering the comma!).\n"
msgstr ""

#: Sets level 1
msgid ""
"If you start your proof with \n"
"\n"
"`change ∀ a : X, a ∈ A → a ∈ A,`\n"
"\n"
"then the goal should change to `⊢ ∀ (a : X), a ∈ A → a ∈ A`. You can change "
"it back with\n"
"\n"
"`change A ⊆ A,`\n"
"\n"
"Note that you do not have to use the `change` tactic at all to complete this "
"proof.\n"
"\n"
msgstr ""

#: Sets level 1
msgid ""
"Hint : If you are unsure how to prove A ⊆ A directly, try changing your goal."
msgstr ""

#: Sets level 1 2
msgid "<hr style=\"height:10px; visibility:hidden;\" />\n"
msgstr ""

#: Sets level 1
msgid ""
"\n"
"In this example, using\n"
"\n"
"`intro a,`\n"
"\n"
"will introduce an arbitrary term of type X.\n"
"\n"
"Note that this is the tactic we use to assume a hypothesis (when proving an "
"implication), or to choose an arbitrary element of some domain (when "
"defining a function).\n"
"\n"
"Use the same tactic to introduce an appropriately named hypothesis for an "
"implication, and close the goal with the `exact` tactic.\n"
msgstr ""

#: Sets level 1
msgid ""
"Hint : To make progress with a goal of form `∀ a : X, ...`, introduce a term "
"of type `X` by using a familiar tactic."
msgstr ""

#: Sets level 1
msgid "If you get stuck, you can click on the hints for more details!\n"
msgstr ""

#: Sets level 1
msgid "If $A$ is a set of elements of type X, then $A \\subseteq A$. \n"
msgstr ""

#: Sets level 2
msgid ""
"# Chapter 1 : Sets\n"
"\n"
"## Level 2\n"
msgstr ""

#: Sets level 2
msgid ""
"Working with sets is very similar to working with propositions.\n"
"Let's now prove that any set $A$ is included in its union with \n"
"any other set $B$, or $A ⊆ A ∪ B$. \n"
"\n"
"Our goal is definitionally equivalent to `∀ x ∈ A, x ∈ (A ∪ B)`.\n"
"\n"
"You should already know the tactics needed to prove this goal, so give \n"
"it a try before checking the hints.\n"
msgstr ""

#: Sets level 2
msgid ""
"The goal can be changed to the quantified statement above, using\n"
"\n"
"`change ∀ x ∈ A, x ∈ A ∪ B,`\n"
"\n"
"To make the relationship between sets and propositions even clearer, we "
"could use\n"
"\n"
"`change ∀ x ∈ A, x ∈ A ∨ x ∈ B,`\n"
msgstr ""

#: Sets level 2
msgid "Hint : The proof steps may become clearer if you change the goal."
msgstr ""

#: Sets level 2
msgid ""
"With or without the `change` lines, you can introduce the \n"
"hypotheses we need by using \n"
"\n"
"`intros x hx,`\n"
"\n"
"Now the equivalence with the world of propositions will become apparent. \n"
"\n"
"To prove that the union of two sets is inhabited is to prove the "
"disjunction \n"
"$P ∨ Q$ of two propositions, where the left one, $P$, reads $x ∈ A$. \n"
"\n"
"Thus, choosing `left,` will select the term that coincides with the "
"hypothesis `hx`. \n"
"\n"
"You should now be able to easily finish the proof.\n"
msgstr ""

#: Sets level 2
msgid ""
"Hint : After introducing your terms, you'll need to prove one side of a "
"disjunction."
msgstr ""

#: Sets level 2 Series 3 4 Integral 1
msgid ""
"If $A$ and $B$ are sets of any type $X$, then\n"
"$$ A \\subseteq A\\cup B.$$ \n"
msgstr ""

#: Sets level 3
msgid ""
"# Chapter 1 : Sets\n"
"\n"
"## Level 3\n"
msgstr ""

#: Sets level 3
msgid ""
"Now prove that for any two sets $A$ and $B$, $A ∩ B ⊆ A$.  \n"
"After `intros x hx,`, the `hx` hypothesis will be a conjunction.  \n"
"Use the `cases` tactic to finish.\n"
msgstr ""

#: Sets level 3
msgid ""
"If $A$ and $B$ are sets of any type $X$, then\n"
"$$ A \\cap B \\subseteq A.$$\n"
msgstr ""

#: Sets level 4
msgid ""
"# Chapter 1 : Sets\n"
"\n"
"## Level 4\n"
msgstr ""

#: Sets level 4
msgid ""
"To prove the theorem below, remember that you can use `split` to \n"
"change the goal into two goals, corresponding to the left-right and\n"
"right-left implication, respectively. For the first goal, after\n"
"`intro H,` the equality of the two sets can be rewritten in terms\n"
"of inclusion by `apply set.subset.antisymm,`. You can find the "
"corresponding\n"
"statement in the left side bar. \n"
"In that statement, the arguments in between braces are implicit; \n"
"in this case the types of $A$ and $B$ are inferred from the\n"
"two hypotheses $H$ and $G$.\n"
msgstr ""

#: Sets level 4
msgid ""
"If $A$ and $B$ are sets of any type $X$, then\n"
"$$ A \\subseteq B \\iff A \\cup B = B.$$\n"
msgstr ""

#: Sets level 5
msgid ""
"# Chapter 1 : Sets\n"
"\n"
"## Level 5\n"
msgstr ""

#: Sets level 5
msgid ""
"You should now be able to prove the theorem below if you\n"
"use `split` and `cases` together with `set.subset.antisymm`.\n"
msgstr ""

#: Sets level 5
msgid ""
"If $A$ and $B$ are sets of any type $X$, then\n"
"$$ A \\subseteq B \\iff A \\cap B = A.$$\n"
msgstr ""

#: Sets level 6
msgid ""
"# Chapter 1 : Sets\n"
"\n"
"## Level 6\n"
msgstr ""

#: Sets level 6
msgid ""
"In this level you continue working with sets, while learning some useful\n"
"Lean tactics, `by_contradiction` and `push_neg`. \n"
"You need to prove that the empty set is included in any set.\n"
"To do that, we'll follow the advice of P. Halmos in \"Naive Set Theory\".\n"
"That is, to prove something is true about the empty set, prove that it "
"cannot be false.\n"
msgstr ""

#: Sets level 6
msgid "theorem empty_def : (∅ : set α) = {x | false} := rfl\n"
msgstr ""

#: Sets level 6
msgid "Empty set definition in mathlib:"
msgstr ""

#: Sets level 6
msgid ""
"When starting this level, the goal is:\n"
"$$\\forall (A : \\textrm{set} \\; X), \\; \\emptyset \\subseteq A$$\n"
"To make progress, you'll need to instantiate a specific set $A$ \n"
"with the well-known `intro` tactic.\n"
"\n"
"Remember now the definition of set inclusion. The goal \n"
"$$ \\emptyset \\subseteq A$$\n"
"is the same as \n"
"$$ \\forall x \\in \\emptyset, x \\in A.$$\n"
"Thus, use `change ∀ x ∈ ∅, x ∈ A` on the line after `intro A`.\n"
"Time to switch to the meat of the proof. Type `by_contradiction hn` to "
"introduce \n"
"the contradiction hypothesis `hn` and change the goal to `false`.\n"
" \n"
"Next, it is helpful to further change this into the equivalent statement "
"that there exists \n"
"a member of the empty set which does not belong to $A$. \n"
"This can be accomplished by\n"
"`push_neg at hn`. You sure can bring this home from here using `cases`.\n"
"\n"
msgstr ""

#: Sets level 6
msgid "The empty set is included in any set $A$.... \n"
msgstr ""

#: Sets level 7
msgid ""
"# Chapter 1 : Sets\n"
"\n"
"## Level 7\n"
msgstr ""

#: Sets level 7
msgid ""
"This is a very basic example of working with intervals of real numbers in "
"Lean.\n"
"An interval that is closed at both endpoints $a$ and $b$ can be \n"
"constructed using `set.Icc a b`. For an open-closed interval, the notation\n"
"is `set.Ioc a b`, etc. The usual closed-interval notation, using square\n"
"brackets, is used here as a wrapper around these definitions.\n"
"After `intro hx,` the `split` tactic will showcase the conditions for \n"
"membership. The inequality goals can be met with the `linarith` tactic.\n"
"The latter is very useful when dealing with goals that don't involve any\n"
"nonlinearity in the involved variables, in particular with inequalities.\n"
msgstr ""

#: Sets level 7
msgid "If $x = 2$ then $x ∈ [0,5]$\n"
msgstr ""

#: Sets level 8
msgid ""
"# Chapter 1 : Sets\n"
"\n"
"## Level 8\n"
msgstr ""

#: Sets level 8
msgid ""
"This is a little more complicated example asking you to work with intervals "
"of reals.\n"
"The result will be of help in the sup-inf world.\n"
msgstr ""

#: Sets level 8
msgid ""
"Prove that if $x = 0$, then `x ∈ mem_prod_sets [(-2:ℝ),-1] [(0:ℝ), 3]`\n"
msgstr ""

#: Sets level 9
msgid ""
"# Chapter 1 : Sets\n"
"\n"
"## Level 9\n"
"\n"
"As a final test of your ability in working with sets, prove that the set of "
"rational \n"
"numbers is dense in the reals.\n"
"\n"
"This proof will, among other things, rely on several new axioms that appear\n"
"in the left side bar.\n"
"Note that you may need to change the type of some quantities from rationals "
"to reals.\n"
"Lean doesn't necessarily consider the rational $2$ to be the same at the "
"real number $2$.\n"
"Some of the axioms on the left make working with the casts from rationals to "
"reals easier.\n"
msgstr ""

#: Sets level 9
msgid "-- one way to prove ℚ dense in ℝ "
msgstr ""

#: Sets level 9
msgid "Rationals are dense in the reals.\n"
msgstr ""

#: world_config
msgid "Order"
msgstr ""

#: Order level 1
msgid ""
"# Chapter 2 : Order\n"
"\n"
"## Level 1\n"
"\n"
"This level aims to familiarize you with the use of the trichotomy property "
"in \n"
"Lean, as it will come in handy in later levels.\n"
"This property is stated in Lean's mathlib is:\n"
"\n"
"`lt_trichotomy : ∀ (a b : ?M_1), a < b ∨ a = b ∨ b < a`\n"
"\n"
"and you can just use it to finish the proof below.\n"
msgstr ""

#: Order level 1
msgid ""
"For any two real numbers $a$ and $b$, we have that\n"
"$$ a < b \\lor a = b \\lor b < a$$.\n"
msgstr ""

#: Order level 2
msgid ""
"# Chapter 2 : Order\n"
"\n"
"## Level 2\n"
"\n"
"This level invites you to work out a property of the absolute value.\n"
"In Lean the absolute value of $x$ is denoted by `abs x`. \n"
msgstr ""

#: Order level 2
msgid ""
"definition abs {α : Type u} [decidable_linear_ordered_add_comm_group α] (a : "
"α) : α := max a (-a)\n"
msgstr ""

#: Order level 2
msgid "The definition of the absolute value in mathlib:"
msgstr ""

#: Order level 2
msgid ""
"For ease of use, a notation can be wrapped around that definition as below.\n"
msgstr ""

#: Order level 2
msgid ""
"For any two real numbers $a$ and $b$, we have that\n"
"$$|ab| = |a||b|$$.\n"
msgstr ""

#: Order level 3
msgid ""
"# Chapter 2 : Order\n"
"\n"
"## Level 3\n"
"\n"
"Another property of the absolute value.\n"
msgstr ""

#: Order level 3
msgid ""
"For any two real numbers $a$ and $b$, we have that\n"
"$$|a| ≤ c ↔ -c ≤ a ≤ c$$.\n"
msgstr ""

#: Order level 4
msgid ""
"# Chapter 2 : Order\n"
"\n"
"## Level 4\n"
"\n"
"This level invites you to work out a property of the absolute value.\n"
"In Lean the absolute value of $x$ is denoted by `abs x`. \n"
"For ease of use, a notation can be used around that definition as below.\n"
"Feel free to use the triangle inequality on the real numbers,\n"
"\n"
"`abs_add : ∀ (a b : ?M_1), |a + b| ≤ |a| + |b|`\n"
"\n"
"together with the `linarith` and `norm_num` tactics.\n"
msgstr ""

#: Order level 4
msgid ""
"For any two real numbers $a$ and $b$, we have that\n"
"$$| a - b| ≤ |a| + |b|$$.\n"
msgstr ""

#: Order level 5
msgid ""
"# Chapter 2 : Order\n"
"\n"
"## Level 5\n"
"\n"
"Another well-known property of the absolute value.\n"
msgstr ""

#: Order level 5
msgid ""
"For any two real numbers $a$ and $b$, we have that\n"
"$$| |a| - |b| | ≤ |a - b|$$.\n"
msgstr ""

#: Order level 6
msgid ""
"# Chapter 2 : Order\n"
"\n"
"## Level 6\n"
"\n"
"An interesting result to prove.\n"
msgstr ""

#: Order level 6
msgid ""
"For any two non-negative real numbers $a$ and $b$, we have that\n"
"$$a \\le b \\iff a^2 \\le b^2 $$.\n"
msgstr ""

#: Order level 7
msgid ""
"# Chapter 2 : Order\n"
"\n"
"## Level 7\n"
"\n"
"Prove by example that there exist pairs of real numbers\n"
"$a$ and $b$ such that $a \\in \\mathbb{R} \\setminus \\mathbb{Q}$, \n"
"$b \\in \\mathbb{R} \\setminus \\mathbb{Q}$,\n"
"but their sum $a + b$ is a rational number, $(a+b) \\in \\mathbb{Q}$.\n"
"You may use this result in the Lean mathlib library:\n"
"\n"
"`irrational_sqrt_two : irrational (sqrt 2)`\n"
"\n"
msgstr ""

#: Order level 7
msgid ""
"Not true that for any $a$, $b$, irrational numbers, the sum is \n"
"also an irrational number.\n"
msgstr ""

#: Order level 8
msgid ""
"# Chapter 2 : Order\n"
"\n"
"## Level 8\n"
"\n"
"Prove by example that there exist pairs of real numbers\n"
"$a$ and $b$ such that $a \\in \\mathbb{R} \\setminus \\mathbb{Q}$, \n"
"$b \\in \\mathbb{R} \\setminus \\mathbb{Q}$,\n"
"but their product $a \\cdot b$ is a rational number, $(a \\cdot b) \\in "
"\\mathbb{Q}$.\n"
"You may use this result in the Lean mathlib library:\n"
"\n"
"`irrational_sqrt_two : irrational (sqrt 2)\n"
msgstr ""

#: Order level 8
msgid ""
"Not true that for any $a$, $b$, irrational numbers, the product is \n"
"also an irrational number.\n"
msgstr ""

#: Order level 9
msgid ""
"# Chapter 2 : Order\n"
"\n"
"## Level 9\n"
"\n"
"This level invites you to work out a property of the absolute value.\n"
"In Lean the absolute value of $x$ is denoted by `abs x`. \n"
"For ease of use, a notation can be used around that definition as below.\n"
"Feel free to use the triangle inequality on the real numbers,\n"
"\n"
"`abs_add : ∀ (a b : ?M_1), |a + b| ≤ |a| + |b|`\n"
"\n"
"together with the `linarith` and `norm_num` tactics.\n"
msgstr ""

#: Order level 9
msgid ""
"For any two real numbers $a$ and $b$, we have that\n"
"$$|a + b| = |a| + |b|$$ if and only if $ab \\ge 0$ .\n"
msgstr ""

#: world_config
msgid "Sup and Inf"
msgstr ""

#: Sup and Inf level 1 2
msgid "-- World name : Sup and Inf"
msgstr ""

#: Sup and Inf level 1
msgid ""
"# Chapter 3 : Sup and Inf\n"
"\n"
"## Level 1 : Upper bounds\n"
msgstr ""

#: Sup and Inf level 1
msgid ""
"Let $X$ be a set of real numbers.\n"
"\n"
"We say a real number $b$ is an *upper bound* for $X$ if every $x \\in X$ is "
"at most $b$.\n"
msgstr ""

#: Sup and Inf level 1
msgid ""
"Here is an easy fact about upper bounds, which we shall prove below: \n"
"If $X \\subseteq Y$ are two sets of reals, and $b$ is an upper bound for $Y"
"$, \n"
"then it's also an upper bound for $X$.\n"
"\n"
"You can prove this easily in Lean using the `change` tactic. \n"
msgstr ""

#: Sup and Inf level 1
msgid ""
"If $X \\subseteq Y$ are two sets of reals, and $b$ is an upper bound for $Y"
"$, \n"
"then it's also an upper bound for $X$.\n"
msgstr ""

#: Sup and Inf level 2
msgid ""
"# Chapter 3 : Sup and Inf\n"
"\n"
"## Level 2  \n"
"\n"
msgstr ""

#: Sup and Inf level 2
msgid ""
"The completeness axiom on the reals states that any non-empty subset \n"
"$X \\subseteq \\mathbb{R}$ that is bounded above has a least upper bound.\n"
"Here we explore the converse statement: any set of reals that has a supremum "
"is non-empty and \n"
"has an upper bound. The second part of the result is trivial, but showing "
"that the\n"
"set is non-empty will ask you to use techniques learned in the first world.\n"
msgstr ""

#: Sup and Inf level 2
msgid "Any set of reals that has a supremum is non-empty and bounded above.\n"
msgstr ""

#: Sup and Inf level 3
msgid ""
"# Chapter 3 : Sup and Inf\n"
"\n"
"## Level 3\n"
msgstr ""

#: Sup and Inf level 3
msgid ""
"This level asks you to prove what the supremum of a given open set is.\n"
msgstr ""

#: Sup and Inf level 3
msgid "The LUB of...\n"
msgstr ""

#: Sup and Inf level 4
msgid ""
"# Chapter 3 : Sup and Inf\n"
"\n"
"## Level 4 \n"
msgstr ""

#: Sup and Inf level 4
msgid "A generalization of the result in the previous level.\n"
msgstr ""

#: Sup and Inf level 4
msgid "A more general version of the previous level...\n"
msgstr ""

#: Sup and Inf level 5
msgid ""
"# Chapter 3 : Sup and Inf\n"
"\n"
"## Level 5\n"
"\n"
"A classical result: the supremum of an element-wise sum of sets.\n"
msgstr ""

#: Sup and Inf level 5
msgid ""
"If $A$ and $B$ are sets of reals, then\n"
"$$ \\textrm{sup} (A + B) = \\textrm{sup} (A) + \\textrm{sup}(B)$$\n"
msgstr ""

#: Sup and Inf level 5
msgid "-- Kevin's term proof for second part"
msgstr ""

#: Sup and Inf level 5
msgid "-- Patrick Massot's proof for second part"
msgstr ""

#: Sup and Inf level 5
msgid "    suffices : x + y ≤ S, by linarith, -- by rwa le_sub_iff_add_le',"
msgstr ""

#: Sup and Inf level 5
msgid "    suffices : b ≤ S - x, by linarith, -- by rwa le_sub,"
msgstr ""

#: Sup and Inf level 5
msgid "  linarith [hA.2 H2],  --exact le_sub_iff_add_le.mp (hA.2 H2),"
msgstr ""

#: Sup and Inf level 6
msgid ""
"# Chapter 3 : Sup and Inf\n"
"\n"
"## Level 6\n"
"\n"
"This level, very similar to the previous, showcases the infimum.\n"
msgstr ""

#: Sup and Inf level 6
msgid ""
"If $A$ and $B$ are sets of reals, then\n"
"$$ \\textrm{inf} (A + B) = \\textrm{inf} (A) + \\textrm{inf}(B)$$\n"
msgstr ""

#: Sup and Inf level 7
msgid ""
"# Chapter 3 : Sup and Inf\n"
"\n"
"## Level 7\n"
"\n"
"Another level that showcases the infimum.\n"
msgstr ""

#: Sup and Inf level 7
msgid ""
"If $A$ is a set of reals, then\n"
"$$ \\textrm{inf} (c + A) = c + \\textrm{inf} (A)$$\n"
msgstr ""

#: Sup and Inf level 8
msgid ""
"# Chapter 3 : Sup and Inf\n"
"\n"
"## Level 8\n"
"\n"
"Again a classical result.\n"
msgstr ""

#: Sup and Inf level 8
msgid "-- supremum of constant × set"
msgstr ""

#: Sup and Inf level 8
msgid ""
"If $A$ is a set of reals and $c > 0$, then\n"
"$$ \\textrm{sup} (cA) = c \\cdot \\textrm{sup} (A)$$\n"
msgstr ""

#: Sup and Inf level 9
msgid ""
"# Chapter 3 : Sup and Inf\n"
"\n"
"## Level 9\n"
"\n"
"An intermediary result to be used in the next level.\n"
msgstr ""

#: Sup and Inf level 9 10
msgid "-- main result in lemma sup_mem_prod_of_sets"
msgstr ""

#: Sup and Inf level 9
msgid "Prove that a given real number is the supremum of a particular set.\n"
msgstr ""

#: Sup and Inf level 9
msgid ""
"Given two sets of reals $A$ and $B$, show that given real number is the LUB\n"
"of their elementwise product `mem_prod_sets`.\n"
msgstr ""

#: Sup and Inf level 10
msgid ""
"# Chapter 3 : Sup and Inf\n"
"\n"
"## Level 10\n"
msgstr ""

#: Sup and Inf level 10
msgid ""
"--def mem_prod_sets (A : set ℝ) (B : set ℝ) := { x : ℝ | ∃ y ∈ A, ∃ z ∈ B, x "
"= y * z}"
msgstr ""

#: Sup and Inf level 10
msgid ""
"Intermediary result `zero_in_prod` proved in sets_level08.\n"
"\n"
"Intermediary result `mem_prod_sets_lub_proof` in previous level.\n"
msgstr ""

#: Sup and Inf level 10
msgid ""
"For two non-empty sets of reals $A$ and $B$, it is not in general true that\n"
"$$ \\textrm{sup} (A \\cdot B) = \\textrm{sup} (A) \\cdot \\textrm{sup}(B)$$\n"
"where $A \\cdot B$ is defined pointwise as above.\n"
msgstr ""

#: Sup and Inf level 11
msgid ""
"# Chapter 3 : Sup and Inf\n"
"\n"
"## Level 11\n"
msgstr ""

#: Sup and Inf level 11
msgid "The set of rational numbers does not have a supremum\n"
msgstr ""

#: Sup and Inf level 12
msgid ""
"# Chapter 3 : Sup and Inf\n"
"\n"
"## Level 12\n"
msgstr ""

#: Sup and Inf level 12
msgid "-- Might want to make this into an axiom to be placed on the left"
msgstr ""

#: Sup and Inf level 12
msgid ""
"The Archimedean principle is equivalent to the set of natural numbers being "
"unbounded above.\n"
msgstr ""

#: Sup and Inf level 13
msgid ""
"# Chapter 3 : Sup and Inf\n"
"\n"
"## Level 13\n"
"\n"
"This proof will be easy now.\n"
msgstr ""

#: Sup and Inf level 13
msgid ""
"The rational numbers are not complete.\n"
"Need to complete the proof.\n"
msgstr ""

#: world_config
msgid "Limits of sequences"
msgstr ""

#: Limits of sequences level 1
msgid "-- The next few things should be hidden"
msgstr ""

#: Limits of sequences level 1
msgid "-- World name : Sequences and limits"
msgstr ""

#: Limits of sequences level 1
msgid ""
"# Chapter 3 : Sequences and limits\n"
"\n"
"# Level 1 : Introduction to sequences.\n"
"\n"
"Lean's natural numbers start at zero, so it is convenient to let our "
"sequences start from the zeroth term.\n"
"In other words, a sequence of reals will be $a_0, a_1, a_2, \\ldots$. \n"
msgstr ""

#: Limits of sequences level 1
msgid ""
"Let's just step back for a minute and think about what a sequence really "
"*is*. \n"
"If $n$ is a natural number then $a_n$ is a real number, \n"
"so $n\\mapsto a_n$ is actually a function from natural numbers to real "
"numbers. \n"
"If we just call this function $a$ then the $n$th term in the sequence\n"
"will be called `a(n)` or `a n` in Lean, rather than $a_n$, but this is OK.\n"
"\n"
"The key definition we want is the concept of a limit of a sequence.\n"
msgstr ""

#: Limits of sequences level 1
msgid ""
"Let's now prove the basic fact that a sequence has at most one limit. \n"
msgstr ""

#: Limits of sequences level 1
msgid "If $a_n \\to \\ell$ and $a_n \\to m$ then $\\ell = m$. \n"
msgstr ""

#: Limits of sequences level 2
msgid "Another basic result for working with sequences.\n"
msgstr ""

#: Limits of sequences level 2
msgid ""
"If $\\lim_{n \\to \\infty} a_n = \\alpha$ and $\\lim_{n \\to \\infty} b_n = "
"\\beta$, then\n"
" $\\lim_{n \\to \\infty} (a_n + b_n) = \\alpha + \\beta$\n"
msgstr ""

#: Limits of sequences level 3
msgid "A basic result for working with sequences.\n"
msgstr ""

#: Limits of sequences level 3
msgid ""
"If $\\lim_{n \\to \\infty} a_n = \\alpha$ and $c \\in \\mathbb{R}$, then\n"
" $\\lim_{n \\to \\infty} (c \\cdot a_n) = c \\cdot \\alpha$\n"
msgstr ""

#: Limits of sequences level 4
msgid "Use the previous results to obtain linearity.\n"
msgstr ""

#: Limits of sequences level 4
msgid ""
"If $\\lim_{n \\to \\infty} a_n = \\alpha$ and $\\lim_{n \\to \\infty} b_n = "
"\\beta$\n"
"and $c$ is a constant, then \n"
"$\\lim_{n \\to \\infty} ( c * a_n + c * b_n) = c \\alpha + c \\beta$\n"
msgstr ""

#: Limits of sequences level 5
msgid "A simple limit proof.\n"
msgstr ""

#: Limits of sequences level 5
msgid "Prove that the limit of $a_n = 1/n$ is zero.\n"
msgstr ""

#: Limits of sequences level 6
msgid ""
"Relationship convergent/Cauchy sequences.\n"
"\n"
"Work in progress.\n"
msgstr ""

#: Limits of sequences level 6
msgid ""
"A sequence of real numbers is convergent if and only if it is\n"
"a Cauchy sequence.\n"
msgstr ""

#: world_config
msgid "Series"
msgstr ""

#: Series level 1
msgid "Temporary level 01: If $\\sum a_n$ converges, then $a_n \\to 0$.\n"
msgstr ""

#: Series level 1
msgid "If partial sum sequence of $a_n$ convergent, $a_n → 0$.\n"
msgstr ""

#: Series level 2
msgid ""
"Idea 02: if $\\forall n \\in \\mathbb{N}, a_n \\ge 0$,\n"
"$\\sum a_n$ converges iff partial sums bounded above.\n"
msgstr ""

#: Series level 3
msgid "Idea 03: comparison test\n"
msgstr ""

#: Series level 4
msgid "Idea 04: root test\n"
msgstr ""

#: world_config
msgid "Functions"
msgstr ""

#: Functions level 1
msgid ""
"# Chapter 6 : Functions\n"
"\n"
"## Level 1\n"
"\n"
"A classical result in composition of functions.\n"
msgstr ""

#: Functions level 1
msgid ""
"If $f : X \\to Y$ and $g : Y \\to Z$ are both injective functions, then\n"
"the function resulting from their composition is also injective.\n"
msgstr ""

#: Functions level 2
msgid ""
"# Chapter 6 : Functions\n"
"\n"
"## Level 2\n"
"\n"
"A classical result in composition of functions.\n"
msgstr ""

#: Functions level 2
msgid ""
"If $f : X \\to Y$ and $g : Y \\to Z$ are both surjective functions, then\n"
"the function resulting from their composition is also surjective.\n"
msgstr ""

#: Functions level 3
msgid ""
"# Chapter 6 : Functions\n"
"\n"
"## Level 3\n"
"\n"
"Be sure to make use of the results in the previous two levels.\n"
msgstr ""

#: Functions level 3
msgid ""
"If $f : X \\to Y$ and $g : Y \\to Z$ are both bijective functions, then\n"
"the function resulting from their composition is also bijective.\n"
msgstr ""

#: Functions level 4
msgid ""
"# Chapter 6 : Functions\n"
"\n"
"## Level 4\n"
"\n"
"A classical result in composition of functions.\n"
msgstr ""

#: Functions level 4
msgid "-- inverses"
msgstr ""

#: Functions level 4
msgid ""
"A function $f : X → Y$ has a two-sided inverse if and only if it is a "
"bijection.\n"
msgstr ""

#: Functions level 5
msgid ""
"# Chapter 6 : Functions\n"
"\n"
"## Level 5\n"
"\n"
"A classical result in composition of functions.\n"
"Now going the other way around.\n"
msgstr ""

#: Functions level 5
msgid "If composition of $f$ and $g$ is injective, then $f$ is injective.\n"
msgstr ""

#: Functions level 6
msgid ""
"# Chapter 6 : Functions\n"
"\n"
"## Level 6\n"
"\n"
"A classical result in composition of functions.\n"
"Now going the other way around.\n"
msgstr ""

#: Functions level 6
msgid "If composition of $f$ and $g$ is surjective, then $g$ is injective.\n"
msgstr ""

#: Functions level 7
msgid ""
"Classic eps-delta definition of continuity.\n"
"Use it to prove continuity at one point for a simple function.\n"
"To be proved equivalent to topological definition in topology world.\n"
"\n"
"Work in progress.\n"
msgstr ""

#: Functions level 7
msgid "The function $f(x) = x^2$ is continuous at $x=3$.\n"
msgstr ""

#: Functions level 8
msgid ""
"Classic eps-delta definition of continuity is equivalent to \n"
"the definition using sequences.\n"
"\n"
"Work in progress.\n"
msgstr ""

#: Functions level 8
msgid "The two definitions of continuity are equivalent.\n"
msgstr ""

#: world_config
msgid "Cardinality"
msgstr ""

#: Cardinality level 1
msgid ""
"# Chapter 7 : Cardinality\n"
"\n"
"## Level 1\n"
"\n"
"A classical result about finite sets.\n"
msgstr ""

#: Cardinality level 1
msgid ""
"If $f : X \\to Y$ is an injective function and $Y$ is finite, then\n"
"$X$ is also finite.\n"
msgstr ""

#: Cardinality level 2
msgid ""
"# Chapter 7 : Cardinality\n"
"\n"
"## Level 2\n"
"\n"
"A classical result about countable sets.\n"
msgstr ""

#: Cardinality level 2
msgid ""
"If $f : X \\to Y$ is an injective function and $Y$ is countable, then\n"
"$X$ is also countable.\n"
msgstr ""

#: world_config
msgid "Integral"
msgstr ""

#: Integral level 1
msgid ""
"# Work in progress.\n"
"\n"
msgstr ""

#: Integral level 1
msgid "--do we want a finset or a list?"
msgstr ""

#: Integral level 1
msgid "--either way, not sure how to go about this"
msgstr ""

#: Integral level 1
msgid "--def partition (a b : ℝ) (A: set.Icc a b) (n : ℕ) := finset ℝ"
msgstr ""

#: world_config
msgid "Topology of the reals"
msgstr ""

#: Topology of the reals level 1
msgid ""
" To be technically correct, the definition below should include \n"
" the hypothesis that ε > 0, see the one above.\n"
" But that does raise some issues which I don't know how to handle\n"
" when using it in the main result lemma.\n"
msgstr ""

#: Topology of the reals level 1
msgid "Hausdorff property for the reals.\n"
msgstr ""

#: Topology of the reals level 2
msgid ""
"Classic eps-delta definition of continuity equivalent to topological "
"definition.\n"
"\n"
"Work in progress.\n"
msgstr ""

#: Topology of the reals level 2
msgid ""
"theorem continuous_on_topo_def2 (f : ℝ → ℝ) (X : set ℝ) :\n"
"  ∀ x ∈ X, ∀ t : set ℝ, is_open t → f x ∈ t → ∃ u, is_open u ∧ x ∈ u ∧\n"
"    u ∩ X ⊆ f ⁻¹' t :=\n"
msgstr ""

#: Topology of the reals level 2
msgid "Equivalent definitions of continuity.\n"
msgstr ""
